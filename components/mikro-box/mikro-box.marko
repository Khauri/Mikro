// heavily inspired by https://github.com/rebassjs/rebass/blob/master/packages/reflexbox/src/index.js
import { css as emotion } from '@emotion/css';
import _css, { get } from '@styled-system/css';
import { compose, space, layout, typography, color, flexbox, grid } from 'styled-system';
import defaultTheme from '../../site/themes'; // TODO: Remove this
import {addCriticalClass} from '../mikro-utils';

static {
  const getStyles = compose(space, layout, typography, color, flexbox, grid);
  const getVariantStyles = ({theme, vx, tx = 'variants'}) => 
    _css(get(theme, `${tx}.${vx}`, get(theme, vx)))(theme);
}

<context|{theme = defaultTheme}| from="mikro-theme-provider">
  $ {
    const {
      as = 'div',
      renderBody,
      variant: vx,
      tx,
      sx,
      __css,
      // TODO: Figure out a better way to extract non-style properties
      href, src,
      ...styles
    } = input;
    const baseStyles = _css(__css)(theme);
    const sxStyles = _css(sx)(theme);
    const variantStyles = getVariantStyles({theme, vx, tx});
    const inputStyles = getStyles(_css(styles)(theme));
    const compositeStyles = {
      boxSizing: 'border-box',
      margin: 0,
      minWidth: 0,
      ...baseStyles,
      ...variantStyles,
      ...sxStyles,
      ...inputStyles,
    }
    const classname = emotion(compositeStyles);
    addCriticalClass(classname);
  }
  <${as}
    id=input.id
    class=[input.class, classname]
    style=input.style
    href=href
    src=src
    on-click('emit', 'click')
  >
    <${renderBody} />
  </>
</context>